---
- name: Install nginx
  hosts: all
  become: true
  vars:
    sitename: "mysite.local"


  tasks:
  - name: Add epel-release repo
    yum: name=epel-release state=latest

  - name: Install nginx
    yum:
      name: nginx
      state: present

  - name: create website directory
    file:
      path: "/usr/share/nginx/html/{{ sitename }}"
      state: directory
      owner: nginx
      group: nginx
      mode: '0775'

  - name: create index.html file
    file:
      path: "/usr/share/nginx/html/{{ sitename }}/index.html"
      state: touch
      owner: nginx
      group: nginx
      mode: '0644'
  - name: index.html content
    blockinfile:
      path: "/usr/share/nginx/html/{{ sitename }}/index.html"
      block: |
        <!DOCTYPE html>
        <html lang="en">
        <head>
        <meta charset="utf-8"/>
        </script>
        </head>
        <body>
        <h1>Nginx was started in this host via Ansible</h1><br>
        <h2>Brought to you by linux-zone.org/forums</h2>
        </body>
        </html>

  - name: create fastcgi.cnf file
    file:
      path: "/etc/nginx/fastcgi.conf"
      state: touch
  - name: fastcgi's content
    blockinfile:
      path: "/etc/nginx/fastcgi.conf"
      block: |
        fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param  QUERY_STRING       $query_string;
        fastcgi_param  REQUEST_METHOD     $request_method;
        fastcgi_param  CONTENT_TYPE       $content_type;
        fastcgi_param  CONTENT_LENGTH     $content_length;

        fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
        fastcgi_param  REQUEST_URI        $request_uri;
        fastcgi_param  DOCUMENT_URI       $document_uri;
        fastcgi_param  DOCUMENT_ROOT      $document_root;
        fastcgi_param  SERVER_PROTOCOL    $server_protocol;
        fastcgi_param  REQUEST_SCHEME     $scheme;
        fastcgi_param  HTTPS              $https if_not_empty;

        fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
        fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;

        fastcgi_param  REMOTE_ADDR        $remote_addr;
        fastcgi_param  REMOTE_PORT        $remote_port;
        fastcgi_param  SERVER_ADDR        $server_addr;
        fastcgi_param  SERVER_PORT        $server_port;
        fastcgi_param  SERVER_NAME        $server_name;

        # PHP only, required if PHP was built with --enable-force-cgi-redirect
        fastcgi_param  REDIRECT_STATUS    200;
     
  - name: create virtualhost.conf file
    file:
      path: "/etc/nginx/conf.d/{{ sitename }}.conf"
      state: touch
  - name: fastcgi's content
    blockinfile:
      path: "/etc/nginx/conf.d/{{ sitename }}.conf"
      block: |  
        server {
        listen 80;
        server_name {{ sitename }};
        root /usr/share/nginx/html/{{ sitename }};

        location / {
        try_files $uri $uri/ /index.php?$args;
        index index.html index.htm index.php;
        }

        location ~ \.php$ {
        include /etc/nginx/fastcgi_params;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /usr/share/nginx/html/{{ sitename }}$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_read_timeout 300;
        include fastcgi.conf;
        }
        }
  
#  - name: Rename the default.conf file 
#    copy: 
#      remote_src: True 
#      src: /etc/nginx/conf.d/default.conf 
#      dest: /etc/nginx/conf.d/default.conf-backup
      
#  - name: Remove old files default.conf
#    file: 
#      path: /etc/nginx/conf.d/default.conf 
#      state: absent
  
  - name: define nginx as a user in php-fpm config file
    replace:
      path: /etc/php-fpm.d/www.conf
      regexp: '(.*user = apache.*)'
      replace: 'user = nginx'
 
  - name: define nginx as a gorup in php-fpm config file     
    replace:
      path: /etc/php-fpm.d/www.conf
      regexp: '(.*group = apache.*)'
      replace: 'group = nginx' 
      
  - name: config php.ini file
    lineinfile:
      path: /etc/php.ini
      insertafter: "(.*cgi.fix_pathinfo=.*)" 
      line: "cgi.fix_pathinfo=0"
      firstmatch: yes
      state: present 

  - name: create php file
    shell: echo "<?php phpinfo (); ?>" > /usr/share/nginx/html/{{ sitename }}/info.php

  - name: Recursively change ownership of a directory
    file:
      path: /usr/share/nginx/html/{{ sitename }}
      state: directory
      recurse: yes
      owner: nginx
      group: nginx

  - name: Start NGiNX
    service:
      name: nginx
      state: started
      enabled: yes
      
  - name: Start php-fpm
    service:
      name: php-fpm
      state: restarted

  - name: add services to firewalld service
    firewalld:
      service: http
      permanent: yes
      state: enabled
  - firewalld:
      service: https
      permanent: yes
      state: enabled
  - name: firewalld reload
    command: firewall-cmd --reload
