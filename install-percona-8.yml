---
- hosts: all
  vars:
    mysql_root_password: '@Aa123456'

  tasks:
  - name: Installing percona repository
    yum:
      name: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
      state: present
  - name: Enable the repository
    command: percona-release setup ps80

  - name: Installing percona 8
    yum: name={{item}} state=installed
    with_items: 
      - percona-server-server
      - percona-server-client
      - percona-xtrabackup-80
      - MySQL-python

  - name: get root password
    shell: "grep 'A temporary password is generated for root@localhost' /var/log/mysqld.log | awk -F ' ' '{print $(NF)}'"
    register: root_password

  - name: update my.cnf content
    blockinfile:
      path: /etc/my.cnf
      block: |
        default-authentication-plugin=mysql_native_password
        validate_password.policy=LOW
#        [client]
#        user=root
#        password='{{ mysql_root_password }}'

 # - name: Add .my.cnf
 #   command: cp /etc/my.cnf /root/.my.cnf

  - name: start service
    service: name=mysql state=started 
  - name:  enable service
    service: name=mysqld enabled=yes

  - name: Change mysql root password and keep track in 
    shell: |
      password_match=`awk '/A temporary password is generated for/ {a=$0} END{ print a }' /var/log/mysqld.log | awk '{print $(NF)}'`
      echo $password_match
      mysql -uroot -p$password_match --connect-expired-password -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mysql_root_password }}'; flush privileges; "
      echo "[client]"
      user=root
      password={{ mysql_root_password }} > /root/.my.cnf
    args:
      creates: /root/.my.cnf
    register: change_temp_pass
    notify: restart mysqld

  - meta: flush_handlers
  - debug:
      var: change_temp_pass

  handlers:
  - name: restart mysqld
    systemd: 
      name: mysqld 
      state: restarted

  - name: ensure anonymous users are not in the database
    mysql_user: name='' host={{ item }} state=absent
    with_items:
      - localhost
  - name: remove the test database
    mysql_db: name=test state=absent
  - name: Disallow root login remotely
    command: 'mysql -ne "{{ item }}"'
    with_items:
      - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  - name: Reload privilege tables
    command: 'mysql -ne "{{ item }}"'
    with_items:
      - FLUSH PRIVILEGES
    changed_when: False

  - name: restart mysql
    systemd:
      name: mysqld
      state: restarted
